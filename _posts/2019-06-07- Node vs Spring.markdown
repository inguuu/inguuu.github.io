---
layout: post
title:  "Node.js vs Spring Framework"
date:   2019-08-10 15:10:18
comments: true
---


현재 가장 많이 주목받고 있는 프레임워크 Node.js와 Spring



강력한 프레임워크를 간단하면서도 쉽게 비교해보자!!


<h4>Node.js란? Spring Framework이란?</h4>

<strong>Node.js</strong>

노드는 정의하면 `자바스크립트 프레임워크`이다. 자바스크립트는 프론트엔드 분야에서 주로 활용됐다. 그런데 `노드JS(Node JS)`가 등장하면서 그 용도가 전혀 달라졌다. 노드JS라는 프레임워크 덕분에 자바스크립트로 서버단 기술까지 제어할 수 있게 된 것이다. 2009년 혜성같이 등장한 노드JS는 웹 개발자에게 많은 관심을 받고 있으며, 최근 재단까지 설립되며 기술 개발이 활발히 이뤄지고 있다.
그 밖에 `비동기 프로그램`이라는 장점을 가지고 있고 Express, 여러가지 내장/외장 모듈으로 쉽게 개발할 수 있다.

<strong>Spring Framework</strong>

`자바 플랫폼`을 위한 오픈 소스 애플리케이션 프레임워크로서 간단히 스프링(spring)이라고 한다. 동적인 웹 사이트 개발을 위한 여러 가지 서비스를 제공한다. EJB 기반으로 개발을 하지 않고 POJO(Plain Old Java Object) 기반으로 개발을 하더라도 가볍고, 제어가 가능한 상호 관련이 적은, `AOP(Aspect Oriented Programming. 관점지향 프로그래밍)`을 지원하고, 컨테이너를 통해 라이프사이클을 관리하고, XML 기반으로 컴포넌트를 개발할 수 있도록 지원해주는 프레임워크를 말한다.





<h4>여러가지 측면의 두언어의 비교</h4>


<strong>접근성</strong>

처음 서버를 공부할때 체감은 비교적 노드가 쉬울것이다. 자바스크립트라는 언어의 특성일 수 도있고 MVC라는 특수한 패턴을 지향하지 않아도 된다는점, Express의 편한 개발환경 등 개발자에게는 더 편하게 다가온다.    

<strong>언어</strong>

두 프레임워크의 가장 큰차이는 결국 '자바냐? 자바스크립트냐?'의 차이를 볼 수 있다. 스프링은 자바의 객체지향적 특징인 클래스, 인터페이스를 이용하여 재활용 및 확장성을 높이고 스프링만의 관점지향적 특징도 가지고 있다.
반면에 노드는 스크립트 언어로 비교적 변수선언과 데이터를 다루기 간단하다. 그리고 다른개념이긴 하지만 ECMA7 부터 클래스를 지향하고 있다.   

<strong>장단점</strong>

장점

| 스프링  |  노드  |
| ------ | ------ |
|      |        |




<strong>추세</strong>




