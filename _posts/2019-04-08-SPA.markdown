---
layout: post
title:  "Single Page App ??"
date:   2019-04-08 13:00:08
comments: true
---




<h4>HTML, CSS, JAVASCRIPT 란?</h4>


![htmljscss](https://user-images.githubusercontent.com/49789734/62817841-fbb5aa80-bb77-11e9-813b-071017513459.png)


일상적인 하나의 웹페이지를 구성할때 필요한 언어들

간단하게 생각하면 !!

<strong>HTML은</strong> 버튼, 입력창 등을 `만들어준다`.

{% highlight html %}
<button>버튼<button>
{% endhighlight %}

<strong>CSS는</strong> 만든 버튼, 입력창을 `꾸며준다`. 

{% highlight css %}
#button {
  width: 300px;
  height: 80px;
  color: red;
}
{% endhighlight %}

<strong>JS는</strong> 만든 버튼을 눌렀을때 `동작을 지정`해 준다.

{% highlight javascript %}
document.getElementById("button").onclick =function() {
document.backgroundColor ="white";
}
{% endhighlight %}



<h4>SPA 란?  앵귤러, 리액트, 뷰 란?</h4>

강력한 MVC패턴의 웹 프레임워크가 발전하면서 더 다양한 웹개발을 가능하게 했다.

하지만 기존 MVC패턴에도 간단한 요청을 하는데도 페이지 리로드의 `비효율적인 단점`이 생기게 된다.

그리고 이제는 웹 뿐만이 아니라 다양한 어플리케이션을 적용하게 되는데.... 



이러한 문제를 해결하는 강력한 `자바스크립트 프레임워크` <strong>Single Page Application(일명 SPA)<strong>

서버는 오직 `데이터`만!! 보내서 `효율성`을 가지자!!

 Angular.js, Vue.js, React.js 

![angularvuereact](https://user-images.githubusercontent.com/49789734/62817803-64e8ee00-bb77-11e9-8a0a-40ccb6689fb3.png)



<h4>Vue.js</h4>

ØTemplate 문법

•v-if, v-for, v-model, v-on 등의 다양한 vue 문법

•Computed property

•Watch, filter

•Lifecycle hook



예제

보간법 및 렌더링

![조건렌더링](https://user-images.githubusercontent.com/49789734/62817840-fbb5aa80-bb77-11e9-8216-e85fdde6421a.png)

Watch


![watch](https://user-images.githubusercontent.com/49789734/62817839-fbb5aa80-bb77-11e9-880e-df08e2600e99.png)



자세한 Vue.js는 다른 글 참조

SPA 2편 보러가기 : http://inguuu.github.io/SPA2

Vue.js편 : http://inguuu.github.io/Vue.js

Vue 

[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help
